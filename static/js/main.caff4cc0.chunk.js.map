{"version":3,"sources":["styled/styledGrid.tsx","styled/styledGeneral.tsx","App.tsx","index.tsx"],"names":["Grid","styled","table","Tr","tr","Td","td","Container","div","initialArray","App","React","useState","grid","setGrid","useEffect","checkGame","gridAction","posX","posY","newGrid","map","row","index","gridAfterUser","flagX","indexX","indexY","weHaveAWinner","user","Swal","fire","checkWho","type","countingV","diagonalDesc","countMoves","countingH","indexV","console","log","className","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4tBAEO,IAAMA,EAAOC,IAAOC,MAAV,KAKJC,EAAKF,IAAOG,GAAV,KAEFC,EAAKJ,IAAOK,GAAV,K,iPCPR,IAAMC,EAAYN,IAAOO,IAAV,K,gBCIhBC,EAA2B,CAC/B,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KA8JIC,MA3Jf,WAAgB,IAAD,EACWC,IAAMC,SAAqB,CAAC,YAC9CH,EAAa,IADgC,YAE7CA,EAAa,IAFgC,YAG7CA,EAAa,MAJN,mBACNI,EADM,KACAC,EADA,KAObH,IAAMI,WAAU,WACdC,EAAUH,KACT,CAACA,IAEJ,IAAMI,EAAa,SAACC,EAAcC,GAChC,IAAMC,EAAsB,GAE5B,GADAP,EAAKQ,KAAI,SAACC,EAAeC,GAAhB,OAAmCH,EAAQG,GAAR,YAAqBD,MACrC,KAAxBF,EAAQF,GAAMC,GAAc,CAC9BC,EAAQF,GAAMC,GAAQ,IACtBL,EAAQM,GACR,IAAMI,EAAgB,CAAC,YAAIJ,EAAQ,IAAb,YAAsBA,EAAQ,IAA9B,YAAuCA,EAAQ,KACrE,GAAIF,EAAO,GAAuC,KAAlCM,EAAcN,EAAO,GAAGC,GACtCK,EAAcN,EAAO,GAAGC,GAAQ,SAGhC,IADA,IAAIM,GAAQ,EACHC,EAAS,EAAGA,EAAS,EAAGA,IAC/B,GAAID,EACF,IAAK,IAAIE,EAAS,EAAGA,EAAS,EAAGA,IAC/B,GAAsC,KAAlCH,EAAcE,GAAQC,GAAgB,CACxCH,EAAcE,GAAQC,GAAU,IAChCF,GAAQ,EACR,MAMVX,EAAQU,KAINI,EAAgB,SAACC,GAEV,SAATA,EACIC,IAAKC,KAAK,YAAV,UAA0BF,EAA1B,QAAsC,WACtCC,IAAKC,KAAK,aAAV,UAA2BF,EAA3B,QAAuC,WAC7Cf,EAAQ,CAAC,YAAIL,EAAa,IAAlB,YAA2BA,EAAa,IAAxC,YAAiDA,EAAa,OAQlEuB,EAAW,SAACZ,EAAqBa,GAKrC,IAJA,IAAMJ,EAAgB,MAATI,EAAe,OAAS,UAC/BC,EAAY,CAAC,EAAG,EAAG,GACrBC,EAAe,EACfC,EAAa,EACRV,EAAS,EAAGA,EAAS,EAAGA,IAAU,CAGzC,IAFA,IAAIW,EAAY,EAEPV,EAAS,EAAGA,EAAS,EAAGA,IAC3BP,EAAQM,GAAQC,KAAYM,IAC9BI,IACIX,IAAWC,GAEbQ,IAEFD,EAAUP,MAEZS,EAC8B,KAA5BhB,EAAQM,GAAQC,GAAiBS,EAAaA,EAAa,EAE/D,GAAkB,IAAdC,EAGF,OADAT,EAAcC,IACP,EAGX,GACET,EAAQ,GAAG,KAAOa,GAClBb,EAAQ,GAAG,KAAOa,GAClBb,EAAQ,GAAG,KAAOa,EAIlB,OADAL,EAAcC,IACP,EAET,GAAqB,IAAjBM,EAGF,OADAP,EAAcC,IACP,EAET,IAAK,IAAIS,EAAS,EAAGA,EAAS,EAAGA,IAC/B,GAA0B,IAAtBJ,EAAUI,GAGZ,OADAV,EAAcC,IACP,EAGX,OAAmB,IAAfO,IAnDJN,IAAKC,KAAK,gBAAiB,YAAa,QACxCjB,EAAQ,CAAC,YAAIL,EAAa,IAAlB,YAA2BA,EAAa,IAAxC,YAAiDA,EAAa,OAoD7D,IAKLO,EAAY,SAACI,GACjBY,EAASZ,EAAS,MAAQY,EAASZ,EAAS,KAC5CmB,QAAQC,IAAI,CAAE3B,UAGhB,OACE,yBAAK4B,UAAU,OACb,kBAAClC,EAAD,KACE,kBAACP,EAAD,KACE,+BACE,kBAACG,EAAD,KACE,kBAACE,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,MAGnB,kBAACV,EAAD,KACE,kBAACE,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,MAGnB,kBAACV,EAAD,KACE,kBAACE,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,KAEjB,kBAACR,EAAD,CAAIqC,QAAS,kBAAMzB,EAAW,EAAG,KAC/B,8BAAOJ,EAAK,GAAG,WCxJ/B8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.caff4cc0.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Grid = styled.table`\n  background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);\n  filter: opacity(0.5);\n`;\n\nexport const Tr = styled.tr``;\n\nexport const Td = styled.td`\n  background: #00000066;\n  color: yellow;\n  border: 2px solid black;\n  width: 30vmin;\n  height: 30vmin;\n  cursor: pointer;\n  font-size: 15vmin;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  background: linear-gradient(90deg, #ff9a9e 0%, #fecfef 100%);\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Grid, Tr, Td } from \"./styled/styledGrid\";\nimport { Container } from \"./styled/styledGeneral\";\nimport Swal from \"sweetalert2\";\n\nconst initialArray: string[][] = [\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n  [\"\", \"\", \"\"],\n];\n\nfunction App() {\n  const [grid, setGrid] = React.useState<string[][]>([\n    [...initialArray[0]],\n    [...initialArray[1]],\n    [...initialArray[2]],\n  ]);\n\n  React.useEffect(() => {\n    checkGame(grid);\n  }, [grid]);\n\n  const gridAction = (posX: number, posY: number) => {\n    const newGrid: string[][] = [];\n    grid.map((row: string[], index: number) => (newGrid[index] = [...row]));\n    if (newGrid[posX][posY] === \"\") {\n      newGrid[posX][posY] = \"X\";\n      setGrid(newGrid);\n      const gridAfterUser = [[...newGrid[0]], [...newGrid[1]], [...newGrid[2]]];\n      if (posX < 2 && gridAfterUser[posX + 1][posY] === \"\") {\n        gridAfterUser[posX + 1][posY] = \"O\";\n      } else {\n        let flagX = true;\n        for (let indexX = 0; indexX < 3; indexX++) {\n          if (flagX) {\n            for (let indexY = 0; indexY < 3; indexY++) {\n              if (gridAfterUser[indexX][indexY] === \"\") {\n                gridAfterUser[indexX][indexY] = \"O\";\n                flagX = false;\n                break;\n              }\n            }\n          }\n        }\n      }\n      setGrid(gridAfterUser);\n    }\n  };\n\n  const weHaveAWinner = (user: string) => {\n    const body =\n      user === \"User\"\n        ? Swal.fire(\"Congrats!\", `${user} WON`, \"success\")\n        : Swal.fire(\"Try again!\", `${user} WON`, \"warning\");\n    setGrid([[...initialArray[0]], [...initialArray[1]], [...initialArray[2]]]);\n  };\n\n  const gameDraw = () => {\n    Swal.fire(\"Game finished\", \"is a DRAW\", \"info\");\n    setGrid([[...initialArray[0]], [...initialArray[1]], [...initialArray[2]]]);\n  };\n\n  const checkWho = (newGrid: string[][], type: string) => {\n    const user = type === \"X\" ? \"User\" : \"Machine\";\n    const countingV = [0, 0, 0];\n    let diagonalDesc = 0;\n    let countMoves = 0;\n    for (let indexX = 0; indexX < 3; indexX++) {\n      let countingH = 0;\n      //for each loop we will have same row different column, then, if we count 3 occurrences of the same type, we have a horizontal tic tac toe\n      for (let indexY = 0; indexY < 3; indexY++) {\n        if (newGrid[indexX][indexY] === type) {\n          countingH++;\n          if (indexX === indexY) {\n            //it means that we have an element at the diagonal\n            diagonalDesc++;\n          }\n          countingV[indexY]++;\n        }\n        countMoves =\n          newGrid[indexX][indexY] === \"\" ? countMoves : countMoves + 1;\n      }\n      if (countingH === 3) {\n        //tictactoe horizontal\n        weHaveAWinner(user);\n        return false;\n      }\n    }\n    if (\n      newGrid[2][0] === type &&\n      newGrid[1][1] === type &&\n      newGrid[0][2] === type\n    ) {\n      //tictactoe diagonal superior\n      weHaveAWinner(user);\n      return false;\n    }\n    if (diagonalDesc === 3) {\n      //tictactoe diagonal inferior\n      weHaveAWinner(user);\n      return false;\n    }\n    for (let indexV = 0; indexV < 3; indexV++) {\n      if (countingV[indexV] === 3) {\n        // tictactoe vertical\n        weHaveAWinner(user);\n        return false;\n      }\n    }\n    if (countMoves === 9) {\n      gameDraw();\n      return false;\n    }\n    return true;\n  };\n\n  const checkGame = (newGrid: string[][]) => {\n    checkWho(newGrid, \"X\") && checkWho(newGrid, \"O\");\n    console.log({ grid });\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Grid>\n          <tbody>\n            <Tr>\n              <Td onClick={() => gridAction(0, 0)}>\n                <span>{grid[0][0]}</span>\n              </Td>\n              <Td onClick={() => gridAction(0, 1)}>\n                <span>{grid[0][1]}</span>\n              </Td>\n              <Td onClick={() => gridAction(0, 2)}>\n                <span>{grid[0][2]}</span>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td onClick={() => gridAction(1, 0)}>\n                <span>{grid[1][0]}</span>\n              </Td>\n              <Td onClick={() => gridAction(1, 1)}>\n                <span>{grid[1][1]}</span>\n              </Td>\n              <Td onClick={() => gridAction(1, 2)}>\n                <span>{grid[1][2]}</span>\n              </Td>\n            </Tr>\n            <Tr>\n              <Td onClick={() => gridAction(2, 0)}>\n                <span>{grid[2][0]}</span>\n              </Td>\n              <Td onClick={() => gridAction(2, 1)}>\n                <span>{grid[2][1]}</span>\n              </Td>\n              <Td onClick={() => gridAction(2, 2)}>\n                <span>{grid[2][2]}</span>\n              </Td>\n            </Tr>\n          </tbody>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}